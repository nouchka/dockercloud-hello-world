version: "3"
services:

  balancer:
    image: dockercloud/haproxy:latest
    depends_on:
      - app
      - www
    environment:
      - STATS_AUTH="auth:auth"
      - STATS_PORT=1936
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    ports:
      - 80:80
      - 1936:1936
    networks:
      - frontend
    deploy:
      placement:
        constraints: [node.role == manager]
  redis:
    image: redis:alpine
    volumes:
      - redis-data:/data
    networks:
      - frontend
    deploy:
      placement:
        constraints: [node.role == manager]
  app:
    image: nouchka/dockercloud-hello-world:latest
    networks:
      - frontend
    depends_on:
      - redis
    environment:
      - SERVICE_PORTS=80
      - VIRTUAL_HOST=app.test.com
    deploy:
      replicas: 8
      update_config:
        parallelism: 2
      restart_policy:
        condition: on-failure
  www:
    image: nouchka/dockercloud-hello-world:latest
    networks:
      - frontend
    environment:
      - SERVICE_PORTS=80
      - VIRTUAL_HOST=www.test.com
    deploy:
      replicas: 4
      update_config:
        parallelism: 2
      restart_policy:
        condition: on-failure

networks:
  frontend:

volumes:
  redis-data:
